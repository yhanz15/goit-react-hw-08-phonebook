{"version":3,"file":"static/js/509.2baa1884.chunk.js","mappings":"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","sources":["Pages/ContactEdit/ContactEdit.styled.js","Pages/ContactEdit/ContactEdit.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 10px;\n  align-items: center;\n\n  div {\n    width: 100%;\n  }\n\n  svg {\n    width: 28px;\n    height: 28px;\n  }\n\n  @media screen and (min-width: ${props => props.theme.media.m}) {\n    div > div {\n      width: 300px;\n    }\n\n    svg {\n      width: 36px;\n      height: 36px;\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  font-weight: 500;\n  padding: 10px;\n\n  @media screen and (min-width: ${props => props.theme.media.m}) {\n    width: 500px;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  align-items: end;\n  gap: 10px;\n`;\n\nexport const Button = styled.button`\n  padding: 12px;\n  align-self: flex-start;\n  margin-left: 55px;\n  margin-top: 15px;\n  min-width: 105px;\n  background-color: rgb(102, 102, 102);\n  color: #fff;\n  border-radius: 4px;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transition: box-shadow 250ms ease-in-out, opacity 250ms ease-in-out;\n\n  &:hover {\n    box-shadow: -1px 0px 8px -2px ${props => props.theme.colors.btns.shadow};\n    opacity: 0.9;\n  }\n\n  &:active {\n    box-shadow: -1px 0px 8px -2px ${props => props.theme.colors.btns.shadow};\n    opacity: 0.9;\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { selectCurrentContact } from 'redux/contacts/selectors';\nimport {\n  StyledForm,\n  Wrapper,\n  Button,\n  InputWrapper,\n} from './ContactEdit.styled';\nimport { ErrorMessage, Field, Formik } from 'formik';\nimport { ThemeProvider } from '@mui/material/styles';\nimport * as Yup from 'yup';\nimport { PatternFormat } from 'react-number-format';\nimport { TextField, createTheme } from '@mui/material';\nimport PersonOutlineIcon from '@mui/icons-material/PersonOutline';\nimport PhoneEnabledIcon from '@mui/icons-material/PhoneEnabled';\nimport toast from 'react-hot-toast';\nimport { editContact } from 'redux/contacts/thunk';\nimport { grey } from '@mui/material/colors';\nimport { useMemo } from 'react';\nimport { selectTheme } from 'redux/userTheme/slice';\n\nconst ContactsSchema = Yup.object().shape({\n  name: Yup.string().required('* Name is required'),\n  number: Yup.string().required('* Phone number is required'),\n});\n\nconst ContactEdit = () => {\n  const { id } = useParams();\n  const userTheme = useSelector(selectTheme);\n  const currentContact = useSelector(state =>\n    selectCurrentContact(state, { id })\n  );\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    name: currentContact ? currentContact.name : '',\n    number: currentContact ? currentContact.number : '',\n  };\n\n  const handleSubmit = values => {\n    const updatedContact = { name: values.name, number: values.number, id };\n\n    dispatch(editContact(updatedContact));\n\n    toast.success(\n      <div>\n        Contact <b>{values.name}</b> updated!\n      </div>,\n      {\n        duration: 4000,\n        icon: 'âœ…',\n      }\n    );\n    navigate(-1);\n  };\n\n  // MUI Theme\n  const mode = userTheme;\n  let theme = useMemo(() => {\n    return createTheme({\n      palette: {\n        mode: mode,\n        primary: {\n          main: 'rgb(32, 139, 74)',\n          ...(mode === 'dark' && {\n            main: 'rgb(49, 189, 126)',\n          }),\n        },\n        secondary: {\n          main: 'rgb(105, 105, 105)',\n          ...(mode === 'dark' && {\n            main: '#fff',\n          }),\n        },\n        ...(mode === 'dark' && {\n          background: {\n            default: '#101d2b',\n            paper: '#101d2b',\n          },\n        }),\n        text: {\n          ...(mode === 'light'\n            ? {\n                primary: grey[900],\n                secondary: grey[800],\n              }\n            : {\n                primary: '#fff',\n                secondary: grey[500],\n              }),\n        },\n      },\n    });\n  }, [mode]);\n\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={ContactsSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm autoComplete=\"off\">\n          <ThemeProvider theme={theme}>\n            <InputWrapper>\n              <PersonOutlineIcon color=\"secondary\" />\n              <Field\n                as={TextField}\n                label=\"Name\"\n                name=\"name\"\n                multiline\n                variant=\"standard\"\n                className=\"fieldName\"\n              />\n            </InputWrapper>\n            <ErrorMessage\n              name=\"name\"\n              component=\"span\"\n              style={{ color: 'red' }}\n            />\n\n            <InputWrapper>\n              <PhoneEnabledIcon color=\"secondary\" />\n              <Field\n                as={PatternFormat}\n                customInput={TextField}\n                name=\"number\"\n                variant=\"standard\"\n                format=\"+38 (0##) ### ## ##\"\n                allowEmptyFormatting={true}\n                mask=\"_\"\n              />\n            </InputWrapper>\n            <ErrorMessage\n              name=\"number\"\n              component=\"span\"\n              style={{ color: 'red' }}\n            />\n\n            <Button type=\"submit\">Edit</Button>\n          </ThemeProvider>\n        </StyledForm>\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default ContactEdit;\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","props","theme","media","m","Wrapper","_templateObject2","InputWrapper","_templateObject3","Button","_templateObject4","colors","btns","shadow","ContactsSchema","Yup","shape","name","required","number","id","useParams","userTheme","useSelector","selectTheme","currentContact","state","selectCurrentContact","navigate","useNavigate","dispatch","useDispatch","initialValues","mode","useMemo","createTheme","palette","_objectSpread","primary","main","secondary","background","default","paper","text","grey","_jsx","children","Formik","validationSchema","onSubmit","values","updatedContact","editContact","toast","_jsxs","duration","icon","autoComplete","ThemeProvider","PersonOutlineIcon","color","Field","as","TextField","label","multiline","variant","className","ErrorMessage","component","style","PhoneEnabledIcon","PatternFormat","customInput","format","allowEmptyFormatting","mask","type"],"sourceRoot":""}